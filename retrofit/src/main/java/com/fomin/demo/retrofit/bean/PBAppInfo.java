// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: network.proto
package com.fomin.demo.retrofit.bean;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * APP信息
 */
public final class PBAppInfo extends Message<PBAppInfo, PBAppInfo.Builder> {
  public static final ProtoAdapter<PBAppInfo> ADAPTER = new ProtoAdapter_PBAppInfo();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_VERSIONNAME = "";

  public static final Integer DEFAULT_VERSIONCODE = 0;

  public static final PBNetworkType DEFAULT_NETWORK = PBNetworkType.NET_UNKNOWN;

  /**
   * 应用程序版本名
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String versionName;

  /**
   * 应用程序版本号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer versionCode;

  /**
   * 网络信息
   */
  @WireField(
      tag = 3,
      adapter = "com.fomin.demo.retrofit.bean.PBNetworkType#ADAPTER"
  )
  public final PBNetworkType network;

  /**
   * 设备信息
   */
  @WireField(
      tag = 4,
      adapter = "com.fomin.demo.retrofit.bean.PBDevice#ADAPTER"
  )
  public final PBDevice device;

  public PBAppInfo(String versionName, Integer versionCode, PBNetworkType network,
      PBDevice device) {
    this(versionName, versionCode, network, device, ByteString.EMPTY);
  }

  public PBAppInfo(String versionName, Integer versionCode, PBNetworkType network, PBDevice device,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.versionName = versionName;
    this.versionCode = versionCode;
    this.network = network;
    this.device = device;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.versionName = versionName;
    builder.versionCode = versionCode;
    builder.network = network;
    builder.device = device;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBAppInfo)) return false;
    PBAppInfo o = (PBAppInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(versionName, o.versionName)
        && Internal.equals(versionCode, o.versionCode)
        && Internal.equals(network, o.network)
        && Internal.equals(device, o.device);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (versionName != null ? versionName.hashCode() : 0);
      result = result * 37 + (versionCode != null ? versionCode.hashCode() : 0);
      result = result * 37 + (network != null ? network.hashCode() : 0);
      result = result * 37 + (device != null ? device.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (versionName != null) builder.append(", versionName=").append(versionName);
    if (versionCode != null) builder.append(", versionCode=").append(versionCode);
    if (network != null) builder.append(", network=").append(network);
    if (device != null) builder.append(", device=").append(device);
    return builder.replace(0, 2, "PBAppInfo{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBAppInfo, Builder> {
    public String versionName;

    public Integer versionCode;

    public PBNetworkType network;

    public PBDevice device;

    public Builder() {
    }

    /**
     * 应用程序版本名
     */
    public Builder versionName(String versionName) {
      this.versionName = versionName;
      return this;
    }

    /**
     * 应用程序版本号
     */
    public Builder versionCode(Integer versionCode) {
      this.versionCode = versionCode;
      return this;
    }

    /**
     * 网络信息
     */
    public Builder network(PBNetworkType network) {
      this.network = network;
      return this;
    }

    /**
     * 设备信息
     */
    public Builder device(PBDevice device) {
      this.device = device;
      return this;
    }

    @Override
    public PBAppInfo build() {
      return new PBAppInfo(versionName, versionCode, network, device, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBAppInfo extends ProtoAdapter<PBAppInfo> {
    public ProtoAdapter_PBAppInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, PBAppInfo.class);
    }

    @Override
    public int encodedSize(PBAppInfo value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.versionName)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.versionCode)
          + PBNetworkType.ADAPTER.encodedSizeWithTag(3, value.network)
          + PBDevice.ADAPTER.encodedSizeWithTag(4, value.device)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBAppInfo value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.versionName);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.versionCode);
      PBNetworkType.ADAPTER.encodeWithTag(writer, 3, value.network);
      PBDevice.ADAPTER.encodeWithTag(writer, 4, value.device);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBAppInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.versionName(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.versionCode(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: {
            try {
              builder.network(PBNetworkType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 4: builder.device(PBDevice.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBAppInfo redact(PBAppInfo value) {
      Builder builder = value.newBuilder();
      if (builder.device != null) builder.device = PBDevice.ADAPTER.redact(builder.device);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
